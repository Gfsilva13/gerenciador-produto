quarkus.hibernate-orm.log.sql=false

quarkus.log.category."br.edu.ada".level=DEBUG
quarkus.log.category."io.quarkus.oidc".level=DEBUG

quarkus.log.level=DEBUG
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.enable=true
quarkus.log.file.enable=false


#quarkus.log.enable=true
#quarkus.log.color=true
#quarkus.log.file.enable=false
quarkus.log.file.path=logs/application.log
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=5

quarkus.log.category."io.quarkus.oidc.runtime".level=DEBUG
quarkus.log.category."io.quarkus.security".level=DEBUG

%dev.quarkus.log.console.json.enabled=false

quarkus.http.port=8081
quarkus.redis.hosts=redis://redis:6379


quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/q/swagger-ui
quarkus.smallrye-openapi.path=/openapi
#quarkus.oidc.auth-server-url=http://keycloak-quarkus:8080/realms/produto-manager
#quarkus.oidc.auth-server-url=http://localhost:53355/realms/produto-manager

#quarkus.oidc.auth-server-url=http://host.docker.internal:53355/realms/produto-manager


#quarkus.oidc.auth-server-url=http://host.docker.internal:53355/realms/produto-manager
quarkus.oidc.client-id=gerenciador-produto
quarkus.oidc.credentials.secret=caixa-verso
#quarkus.oidc.authentication.redirect-path=/produtos
quarkus.oidc.application-type=service

# Aponte corretamente para o Keycloak na sua máquina:
quarkus.oidc.auth-server-url=http://host.docker.internal:53355/realms/produto-manager

# Diga ao Quarkus para aceitar o issuer que vem no token:
quarkus.oidc.token.issuer=http://localhost:53355/realms/produto-manager

#quarkus.oidc.token.issuer=http://localhost:53355/realms/produto-manager

# H2 em modo JDBC (em memória)
quarkus.hibernate-orm.schema-management.strategy=drop-and-create
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
quarkus.datasource.username=sa
quarkus.datasource.password=sa
quarkus.hibernate-orm.database.generation=update

# Permitir acesso anônimo ao Swagger UI e seus recursos estáticos
quarkus.http.auth.permission.swagger-ui.paths=/q/swagger-ui/*
quarkus.http.auth.permission.swagger-ui.policy=permit
# Indica ao Swagger que a segurança da API é do tipo HTTP Bearer (JWT)
mp.openapi.extensions.smallrye.security-schemes=BearerAuth

# Define o esquema BearerAuth
mp.openapi.extensions.smallrye.security-schemes.BearerAuth.type=HTTP
mp.openapi.extensions.smallrye.security-schemes.BearerAuth.scheme=bearer
mp.openapi.extensions.smallrye.security-schemes.BearerAuth.bearerFormat=JWT


quarkus.http.auth.permission.openapi.paths=/openapi/*
quarkus.http.auth.permission.openapi.policy=permit


quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated

quarkus.datasource.jdbc.driver=org.h2.Driver
quarkus.h2.console.enabled=true
quarkus.h2.console.path=/h2

